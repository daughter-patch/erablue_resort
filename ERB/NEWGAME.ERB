;-------------------------------------------------
;タイトル画面
;-------------------------------------------------
@SYSTEM_TITLE
DRAWLINE
ALIGNMENT CENTER
PRINT_IMG "タイトルロゴ", 5330, 1520
PRINTL
PRINTL 
PRINTL
PRINTL
PRINTL
PRINTL
PRINTL
PRINTL
PRINTL
PRINTL
PRINTL
PRINTL
PRINTL
PRINTL
PRINTL
ALIGNMENT LEFT
DRAWLINE
[IF_DEBUG]
PRINTBUTTON "Ver" + TOSTR(GAMEBASE_VERSION, "0,.000"), 5656
[ELSE]
PRINTS "Ver" + TOSTR(GAMEBASE_VERSION, "0,.000")
[ENDIF]
PRINTL
PRINTFORML %GAMEBASE_INFO%
DRAWLINE
PRINTBUTTON "[0] 最初から始める", 0
PRINTL
PRINTBUTTON "[1] ロードして始める", 1
PRINTL
PRINTBUTTON "[2] CSVエディタを起動する", 2
PRINTL
PRINTBUTTON "[3] 服ERBエディタを起動する", 3
PRINTL
PRINTBUTTON "[4] 弱点コマンド設定ERBエディタを起動する", 4

BINPUT
SELECTCASE RESULT
	CASE 0
		BEGIN FIRST
	CASE 1
		LOADGAME
	CASE 2
		CSVエディタフラグ = 1
		CALL 従業員素質指定雇用
		CSVエディタフラグ = 0
	CASE 3
		CALL 服ERB生成処理
	CASE 4
		CALL 弱点コマンド設定ERB生成処理
	CASE 5656
		CALL バージョンアップ準備処理
ENDSELECT

RESTART


;-------------------------------------------------
;ニューゲーム
;-------------------------------------------------
@EVENTFIRST
#DIM 引き継いだキャラ人数
#DIM 引き継いだランダムキャラ, 10
#DIM 設定中キャラ番号
#DIM 弱点配列
#DIMS 大分割文字列, 10
#DIMS 小分割文字列, 1000
VARSET LOCAL
VARSET LOCALS
VARSET 引き継いだランダムキャラ, -1
VARSET 大分割文字列
VARSET 小分割文字列
TARGET = 0
ASSI = 0

CALL DEFAULT_OPTION

;モード選択（後々使うかもしれないから消さずにコメントアウト）
;PRINTL ★★モードを選択してください★★
;PRINTL [0]START
;
;$INPUT_LOOP
;INPUT
;IF RESULT == 0
;	FLAG:5 = 0
;ELSE
;	GOTO INPUT_LOOP
;ENDIF

;キャラの作成前に必要なデータベース
IF 引き継ぎ中フラグ
	LOADTEXT "dat/人物DT_XML.txt"
	LOCALS:0 = %RESULTS%
	LOADTEXT "dat/人物DT_schema.txt"
	LOCALS:1 = %RESULTS%
	DT_FROMXML "人物データベース", LOCALS:1, LOCALS:0
	LOADTEXT "dat/履歴DT_XML.txt"
	LOCALS:0 = %RESULTS%
	LOADTEXT "dat/履歴DT_schema.txt"
	LOCALS:1 = %RESULTS%
	DT_FROMXML "履歴データベース", LOCALS:1, LOCALS:0
ELSE
	CALL 人物データベースセット
	CALL 履歴データベース作成
ENDIF

初期設定中 = 1
LOCAL:1 = 0
LOCAL:2 = 0
IF あなた引き継ぎ
	;あなた登録
	LOADCHARA "あなた"
	引き継いだキャラ人数 = LOCAL:1
	FOR LOCAL, 0, 100
		あなた特殊能力:LOCAL = あなた特殊能力引き継ぎ:LOCAL
	NEXT
	CFLAG:MASTER:自室位置 = 20
ELSE
	;あなた登録
	ADDCHARA 0
	CALL ADD_PERSON_FROM_CHARA(CHARANUM - 1)
	CALL CUSTOM_CHARAMAKE(MASTER)
	SIF TALENT:MASTER:2 & 2
		MAXBASE:MASTER:5 = 1500
ENDIF

IF 引き継ぎ中フラグ
	FOR LOCAL, 0, 10
		IF 引き継ぎキャラ番号:LOCAL > 0
			;引き継ぎキャラは先に登録
			LOADCHARA TOSTR(LOCAL)
			LOCAL:1 += 1
			IF NO:(LOCAL:1) == 999
				引き継いだランダムキャラ:(LOCAL:2) = ランダムキャラ記録位置判別(LOCAL)
				LOCAL:2 += 1
			ENDIF
			VARSET 現在仕事:(LOCAL:1):0
		ENDIF
	NEXT
ENDIF

FOR LOCAL, 1, キャラクタ数上限
	SIF !EXISTCSV(LOCAL)
		CONTINUE
	;ランダムキャラ排除
	SIF LOCAL == 999
		CONTINUE
	;登録済みのキャラ(=引き継ぎキャラ)はスキップ
	GETCHARA LOCAL
	SIF RESULT > -1
		CONTINUE
	ADDCHARA LOCAL
	設定中キャラ番号 = CHARANUM - 1
	CALL ADD_PERSON_FROM_CHARA(設定中キャラ番号)
	IF 引き継ぎ中フラグ && LOCAL != 0
		FOR LOCAL:1, 0, 500
			IF キャラ変数引き継ぎ:(LOCAL:1):キャラ番号 == NO:設定中キャラ番号
				EXP:設定中キャラ番号:肉体熟知 = キャラ変数引き継ぎ:(LOCAL:1):肉体熟知
				FOR 弱点配列, 0, 50
					弱点看破:設定中キャラ番号:弱点配列 = キャラ変数引き継ぎ:(LOCAL:1):(弱点配列 + 2)
					弱点コマンド枠:設定中キャラ番号:弱点配列 = %キャラ文字列引き継ぎ:(LOCAL:1):弱点配列%
				NEXT
				BREAK
			ENDIF
		NEXT
		CALL 弱点妥当性チェック(設定中キャラ番号)
	ENDIF
NEXT

;引き継ぎランダムキャラの追加
IF 引き継ぎ中フラグ
	FOR LOCAL, 0, 従業員初期値最大記録数
		SIF MATCH(引き継いだランダムキャラ, LOCAL) > 0
			CONTINUE
		IF 従業員初期値記録:LOCAL != ""
			VARSET 大分割文字列
			VARSET 小分割文字列
			ADDCHARA 999
			設定中キャラ番号 = CHARANUM - 1
			SPLIT 従業員初期値記録:LOCAL, "^^^", 大分割文字列
			;弱点
			FOR LOCAL:1, 0, 500
				IF キャラ変数引き継ぎ:(LOCAL:1):キャラ番号 == LOCAL * -1
					EXP:設定中キャラ番号:肉体熟知 = キャラ変数引き継ぎ:(LOCAL:1):肉体熟知
					FOR 弱点配列, 0, 50
						弱点看破:設定中キャラ番号:弱点配列 = キャラ変数引き継ぎ:(LOCAL:1):(弱点配列 + 2)
						弱点コマンド枠:設定中キャラ番号:弱点配列 = %キャラ文字列引き継ぎ:(LOCAL:1):弱点配列%
					NEXT
					BREAK
				ENDIF
			NEXT
			;名前
			VARSET 小分割文字列
			SPLIT 大分割文字列:1, "_", 小分割文字列
			NAME:設定中キャラ番号 = [一般人]%小分割文字列:1%
			CALLNAME:設定中キャラ番号 = %小分割文字列:1%
			;素質
			VARSET 小分割文字列
			SPLIT 大分割文字列:2, "_", 小分割文字列
			FOR LOCAL:1, 0, 900, 3
				SIF 小分割文字列:(LOCAL:1) == ""
					BREAK
				TALENT:設定中キャラ番号:(TOINT(小分割文字列:(LOCAL:1 + 1))) = TOINT(小分割文字列:(LOCAL:1 + 2))
			NEXT
			;フレーバー素質
			VARSET 小分割文字列
			SPLIT 大分割文字列:3, "_", 小分割文字列
			FOR LOCAL:1, 0, 30, 3
				SIF 小分割文字列:(LOCAL:1) == ""
					BREAK
				フレーバー素質:設定中キャラ番号:(TOINT(小分割文字列:(LOCAL:1 + 1))) = TOINT(小分割文字列:(LOCAL:1 + 2))
			NEXT
			;ABL
			VARSET 小分割文字列
			SPLIT 大分割文字列:4, "_", 小分割文字列
			FOR LOCAL:1, 0, 150, 3
				SIF 小分割文字列:(LOCAL:1) == ""
					BREAK
				ABL:設定中キャラ番号:(TOINT(小分割文字列:(LOCAL:1 + 1))) = TOINT(小分割文字列:(LOCAL:1 + 2))
			NEXT
			;ABL
			VARSET 小分割文字列
			SPLIT 大分割文字列:5, "_", 小分割文字列
			FOR LOCAL:1, 0, 300, 3
				SIF 小分割文字列:(LOCAL:1) == ""
					BREAK
				EXP:設定中キャラ番号:(TOINT(小分割文字列:(LOCAL:1 + 1))) = TOINT(小分割文字列:(LOCAL:1 + 2))
			NEXT
			;戦闘系
			VARSET 小分割文字列
			SPLIT 大分割文字列:6, "_", 小分割文字列
			基礎BATTLE_STATE:設定中キャラ番号:属性 = TOINT(小分割文字列:1)
			基礎BATTLE_STATE:設定中キャラ番号:得意武器 = TOINT(小分割文字列:3)
			CALL 初期ステータス設定_テンプレート適用(タイプ数値文字列変換(TOINT(小分割文字列:5)), 設定中キャラ番号)
			知識素質:設定中キャラ番号:性知識 = TOINT(小分割文字列:7)
			CALL ADD_PERSON_FROM_CHARA(設定中キャラ番号)
			CFLAG:設定中キャラ番号:招待不可フラグ = 0
		ENDIF
	NEXT
ENDIF

CALL コマンド存在チェック


スイートルーム部屋数 = 1
開発済み料理名フラグ文字列 += "_"

CALL ユニークキャラ親子関係セット
CALL イベントデータベースセット
CALL 戦闘用データベースセット
IF 引き継ぎ中フラグ
	CALL 人物データベースGC

	LOADTEXT "dat/素材DT_XML.txt"
	LOCALS:0 = %RESULTS%
	LOADTEXT "dat/素材DT_schema.txt"
	LOCALS:1 = %RESULTS%
	DT_FROMXML "所持素材データベース", LOCALS:1, LOCALS:0
	LOADTEXT "dat/証DT_XML.txt"
	LOCALS:0 = %RESULTS%
	LOADTEXT "dat/証DT_schema.txt"
	LOCALS:1 = %RESULTS%
	DT_FROMXML "所持ジョブ証データベース", LOCALS:1, LOCALS:0
	LOADTEXT "dat/指輪DT_XML.txt"
	LOCALS:0 = %RESULTS%
	LOADTEXT "dat/指輪DT_schema.txt"
	LOCALS:1 = %RESULTS%
	DT_FROMXML "所持指輪データベース", LOCALS:1, LOCALS:0
	LOADTEXT "dat/耳飾りDT_XML.txt"
	LOCALS:0 = %RESULTS%
	LOADTEXT "dat/耳飾りDT_schema.txt"
	LOCALS:1 = %RESULTS%
	DT_FROMXML "所持耳飾りデータベース", LOCALS:1, LOCALS:0
	LOADTEXT "dat/アイテムDT_XML.txt"
	LOCALS:0 = %RESULTS%
	LOADTEXT "dat/アイテムDT_schema.txt"
	LOCALS:1 = %RESULTS%
	DT_FROMXML "所持アイテムデータベース", LOCALS:1, LOCALS:0
	LOADTEXT "dat/TIPS_DT_XML.txt"
	LOCALS:0 = %RESULTS%
	LOADTEXT "dat/TIPS_DT_schema.txt"
	LOCALS:1 = %RESULTS%
	DT_FROMXML "TIPSデータベース", LOCALS:1, LOCALS:0

	所持制服文字列 = %制服引き継ぎ%
	所持エロ衣装文字列 = %エロ衣装引き継ぎ%
	MONEY = 所持ルピ引き継ぎ
	VARSET オート射精先オプション, -1
	ARRAYCOPY "オート射精設定引き継ぎ", "オート射精先オプション"
ELSE

	CALL アイテムデータベースセット
	CALL 指輪データベースセット
	CALL 耳飾りデータベースセット
	CALL ジョブ証データベースセット
	CALL 素材アイテムデータベースセット
	CALL TIPSデータベースセット

	CALL 制服登録処理("リゾート従業員制服")
	CALL 制服登録処理("バニー服")
	CALL 制服登録処理("メイド服")
	CALL 制服登録処理("チャイナドレス")
	CALL 制服登録処理("ミニチャイナ")

	CALL エロ衣装登録処理("逆バニー")
	CALL エロ衣装登録処理("マイクロビキニ")
	CALL エロ衣装登録処理("セクシーランジェリー")

	LOCAL:1 = ENUMFUNCENDSWITH("CLOTHES_初期所持関数_")
	IF LOCAL:1 > 0
		FOR LOCAL, 0, LOCAL:1
			CALLFORM %RESULTS:LOCAL%
		NEXT
	ENDIF
	
	MONEY = 5000
	身体項目表示切り替えOPTION = 1p0 | 1p1 | 1p2 | 1p3 | 1p5
	VARSET オート射精先オプション, -1
ENDIF

CALL 食堂メニューデータベースセット
CALL 写真データベースセット
CALL 乗機データベースセット
CALL 所持兵器データベースセット
CALL 従業員業務用マップセット
CALL 自動探索用マップセット
CALL 体位モードデータベースセット
CALL 縁結びデータベースセット
CALL 関係性データベースセット
ZPキャラ無料フォロー = 1
ZPキャラ無料回数 = 3

CALL 素材アイテム登録処理

従業員部屋数 = 2
施設改造度:0:0 = 1
CALL RESET_GRAPH_0

PRINTW パラメータの初期化処理を行います
PRINTL 
SAVESTR:10 = /
LOCAL:1 = CHARANUM / 10
REDRAW 0
FOR LOCAL, 0, CHARANUM
	IF LOCAL > 0 && LOCAL <= 引き継いだキャラ人数
		CALL キャラクター初期化(LOCAL, 1)
	ELSEIF NO:LOCAL == 999
		CALL キャラクター初期化(LOCAL, 1)
	ELSE
		CALL キャラクター初期化(LOCAL)
	ENDIF
	IF LOCAL % LOCAL:1 == 0
		CLEARLINE 1
		PRINTFORML 進行度……{LOCAL / LOCAL:1 * 10}\%
		AWAIT
		;TWAIT 100, 1
	ENDIF
NEXT
CLEARLINE 1
PRINTL 進行度……100%
;起床時刻
CFLAG:MASTER:現在位置 = CFLAG:MASTER:自室位置
CFLAG:MASTER:現在マップ種別 = 0
CFLAG:MASTER:滞在期間 = 999
CFLAG:MASTER:起床予定時刻 = 420
CFLAG:MASTER:睡眠 = 1
初体験日:MASTER:初対面 = 999
FLAG:従業員数 = 1
依頼同時最大数 = 1
DAY = 1
汎用喘ぎ使用OPTION = 3
汎用喘ぎ使用OPTION_男 = 0
CALL 最大レベル算出保存
VARSET 同時モード_選択キャラ, -1

ボタン化用カラーマトリクス:0:0 = 768,256,256,  0,  0
ボタン化用カラーマトリクス:1:0 = 256,768,256,  0,  0
ボタン化用カラーマトリクス:2:0 = 256,256,256,  0,  0
ボタン化用カラーマトリクス:3:0 =   0,  0,  0,256,  0
ボタン化用カラーマトリクス:4:0 =   0,  0,  0,  0,256

REDRAW 1



VARSET 通常キャラ招待
VARSET ＤＭキャラ招待

;初期値設定
滞在キャラ数 = 0
滞在キャラ上限 = 20
モブ観光客数 = 0
;あなたは初期状態で雑務に従事している
現在仕事:0:0 = 1

PRINTW パラメータの初期化処理が終了しました

;呼び出し設定
PRINTL
PRINTW キャラクターの招待制御オプションを呼び出します。
PRINTL
CALL OPTION_招待切り替え
PRINTL
PRINTW このオプションはゲーム開始後もOPTIONから呼び出すことが出来ます。

;呼び出し設定
PRINTL
PRINTW 初期設定オプションを呼び出します。
PRINTL
CALL OPTION_キャラ制限初期切り替え
CALL OPTION_命のリンク初期切り替え
PRINTL

;素質設定
PRINTL
PRINTW 素質の切り替えオプションを呼び出します。
PRINTL
CALL OPTION_素質切り替え
PRINTL
PRINTW このオプションはゲーム開始後もOPTIONから呼び出すことが出来ます。

;フレーバー設定
PRINTL
PRINTW フレーバー素質の設定を呼び出します。
PRINTL
;先に口上側の設定を読み込んでおく
FOR COUNT, 1, CHARANUM
	TRYCALLFORM フレーバー素質初期設定変更_{COUNT}
NEXT
CALL フレーバー素質初期設定
PRINTL

CALL シナリオ_OP

初期設定中 = 0
IF 引き継ぎ中フラグ
	;使用する変数を掃除
	VARSET 周回回数累計_退避
	VARSET キャラ変数引き継ぎ
	VARSET キャラ文字列引き継ぎ
	制服引き継ぎ = 
	所持ルピ引き継ぎ = 0
	VARSET 引き継ぎキャラ番号
	VARSET あなた特殊能力引き継ぎ
	VARSET 従業員初期値記録_退避
	引き継ぎ中フラグ = 0
	あなた引き継ぎ = 0

	最大レベル保存_周回 = 最大レベル引き継ぎ
	;最大レベルに応じて経験値アイテム配布
	CALL 素材入手処理("星晶の欠片", 最大レベル保存_周回, 1)
ENDIF
;変数リセット
CALL TURN_RESET
CALL 最大レベル算出保存

;ログボ処理
LOCAL = GETSECOND() / 3600
;日単位
LOCAL:1 = (LOCAL + 19) / 24

IF (REAL_TIME < LOCAL:1)
	REAL_TIME = LOCAL:1
	CALL ログインボーナス処理
ENDIF

BEGIN SHOP

@EVENTLOAD
CALL VERSION_UP




@キャラクター初期化(ARG, 引き継ぎキャラフラグ = 0)
#DIM 引き継ぎキャラフラグ
#DIMS CSTR切り分け文字列格納, 2
VARSET LOCALS
VARSET CSTR切り分け文字列格納


;全員睡眠状態
CFLAG:ARG:睡眠 = 1
CFLAG:ARG:滞在期間 = -1
CFLAG:ARG:現在位置 = 999
CFLAG:ARG:現在マップ種別 = 0
BASE:ARG:酩酊 = 0
MAXBASE:ARG:酩酊 = 1000
BASE:ARG:母乳 = 0
MAXBASE:ARG:母乳 = 10000
BASE:ARG:性欲 = 0
MAXBASE:ARG:性欲 = 1200
BASE:ARG:満足 = 0
MAXBASE:ARG:満足 = 1200
BASE:ARG:警戒 = 0
MAXBASE:ARG:警戒 = 1001
CALL CLOTHES_RESET(ARG)
CSTR:ARG:二人称 = %CALLNAME:PLAYER%
CALL 精力ゲージ_初期化(ARG)

;射精、勃起、ムード、理性、怒り
BASE:ARG:射精 = 0
BASE:ARG:勃起 = 0
BASE:ARG:ムード = 0
BASE:ARG:理性 = MAXBASE:ARG:理性
BASE:ARG:怒り = 0
BASE:ARG:勃起 = 0
CFLAG:ARG:勃起度 = 0
CFLAG:ARG:同行 = 0
CFLAG:ARG:デート = 0
CFLAG:ARG:酔いすぎ = 0
;発情期
; SIF 発情期判定(ARG)
; 	CFLAG:ARG:発情期フラグ = RAND:9 + 1

IF 引き継ぎキャラフラグ == 0
	VARSET LOCALS
	;招待時同行キャラ
	REPLACE CSTR:ARG:同行キャラ, " ", ""
	SPLIT RESULTS, "%", LOCALS
	LOCAL:2 = RESULT - 1
	FOR LOCAL, 0, LOCAL:2
		SPLIT LOCALS:LOCAL, "_", CSTR切り分け文字列格納
		;同行キャラ格納格納:0に名前、同行キャラ格納:1に確率が入っているはず
		同行候補キャラ番号:ARG:LOCAL = FINDCHARA(NAME, CSTR切り分け文字列格納:0)
		同行候補キャラ確率:ARG:LOCAL = TOINT(CSTR切り分け文字列格納:1)
	NEXT

	VARSET LOCALS
	;知識素質
	SUBSTRING CSTR:ARG:知識素質設定, 1, -1
	SPLIT RESULTS, " ", LOCALS
	LOCAL:2 = RESULT - 1
	FOR LOCAL, 0, LOCAL:2
		SPLIT LOCALS:LOCAL, "Lv", CSTR切り分け文字列格納
		;CSTR切り分け文字列格納:0に素質名、CSTR切り分け文字列格納:1に数値が入っているはず
		知識素質:ARG:(CSTR切り分け文字列格納:0) = TOINT(CSTR切り分け文字列格納:1)
	NEXT

	VARSET LOCALS
	;性癖素質
	SUBSTRING CSTR:ARG:性癖素質設定, 1, -1
	SPLIT RESULTS, " ", LOCALS
	LOCAL:2 = RESULT - 1
	FOR LOCAL, 0, LOCAL:2
		SPLIT LOCALS:LOCAL, "Lv", CSTR切り分け文字列格納
		;CSTR切り分け文字列格納:0に素質名、CSTR切り分け文字列格納:1に数値が入っているはず
		性癖素質:ARG:(CSTR切り分け文字列格納:0) = TOINT(CSTR切り分け文字列格納:1)
	NEXT

	;素質切り替え
	IF TALENT:ARG:陥没乳首 && 素質切り替えOPTION記憶:陥没乳首_なし
		TALENT:ARG:陥没乳首 = 0
	ENDIF
	IF TALENT:ARG:母乳体質 && 素質切り替えOPTION記憶:母乳体質_なし
		TALENT:ARG:母乳体質 = 0
	ENDIF
	IF TALENT:ARG:性別 == 3 && 素質切り替えOPTION記憶:ふたなり_女性
		TALENT:ARG:性別 = 1
	ENDIF

	IF EXP:ARG:キス経験
		CFLAG:ARG:ファーストキスフラグ = 1
	ENDIF

	SIF ARG == MASTER
		RETURN 0

	VARSET LOCALS
	;戦闘ステータス
	SUBSTRING CSTR:ARG:戦闘基礎ステータス設定, 1, -1
	SPLIT RESULTS, " ", LOCALS
		;属性
		SPLIT LOCALS:0, "_", CSTR切り分け文字列格納
		基礎BATTLE_STATE:ARG:属性 = 属性文字列数値変換(CSTR切り分け文字列格納:1)
		;得意武器
		SPLIT LOCALS:1, "_", CSTR切り分け文字列格納
		基礎BATTLE_STATE:ARG:得意武器 = 得意武器文字列数値変換(CSTR切り分け文字列格納:1)
		;初期ステータス
		SPLIT LOCALS:2, "_", CSTR切り分け文字列格納
		CALL 初期ステータス設定_テンプレート適用(CSTR切り分け文字列格納:1, ARG)
		TRYCALLFORM 戦闘初期ステータス設定_{NO:ARG}(ARG)
	;表示奥義設定
	VARSET LOCALS
	IF CSTR:ARG:表示奥義設定 != ""
		SPLIT CSTR:ARG:表示奥義設定, "_", LOCALS
		表示奥義:ARG:0 '= LOCALS:0
		表示奥義:ARG:1 '= LOCALS:1
		表示奥義:ARG:2 '= LOCALS:2
	ENDIF
	VARSET LOCALS
	IF CSTR:ARG:陥落奥義設定 != ""
		SPLIT CSTR:ARG:陥落奥義設定, "_", LOCALS
		陥落奥義:ARG:0 '= LOCALS:0
		陥落奥義:ARG:1 '= LOCALS:1
		陥落奥義:ARG:2 '= LOCALS:2
	ENDIF

	CALL 弱点コマンド初期設定(ARG)
	TRYCALLFORM 口上側初期パラメータ変更_{NO:ARG}
	;この時点で身長・スリーサイズが入っている場合、それを初期値として登録
	SIF BASE:ARG:身長
		CFLAG:ARG:身長初期値 = BASE:ARG:身長
	SIF BASE:ARG:バスト
		CFLAG:ARG:バスト初期値 = BASE:ARG:バスト
	SIF BASE:ARG:ウエスト
		CFLAG:ARG:ウエスト初期値 = BASE:ARG:ウエスト
	SIF BASE:ARG:ヒップ
		CFLAG:ARG:ヒップ初期値 = BASE:ARG:ヒップ

	;正の年齢が入っている場合、それをもとに年齢層を計算
	SIF BASE:ARG:年齢 > 0
		TALENT:ARG:年齢層 = 年齢層算出処理(BASE:ARG:年齢)

	IF 従業員追加中フラグ
		従業員追加中フラグ = 0
	ELSEIF !BASE:ARG:身長 || (!BASE:ARG:バスト && TALENT:ARG:性別 != 2) || !BASE:ARG:ウエスト || !BASE:ARG:ヒップ
		CALL INIT_BODYSIZE(ARG)
	ELSEIF BASE:ARG:身長
		;身長があるなら体格の設定
		CALL INIT_BODYTALENT(ARG)
	ENDIF

	;画像フォルダで有効なものを探す
	CALL 画像フォルダ有効チェック(ARG)

ELSE
	SIF !BASE:ARG:身長
		CALL INIT_BODYSIZE(ARG)

	;同行キャラをCSVを見て入れ直す
	VARSET LOCAL
	VARSET LOCALS
	;まず引き継ぎキャラ同士の同行記録を見る
	IF CSTR:ARG:引き継ぎ用同行キャラ確率保存 != ""
		SPLIT CSTR:ARG:引き継ぎ用同行キャラ確率保存, "_", LOCALS
		FOR LOCAL, 0, 20
			SIF LOCALS:LOCAL == ""
				BREAK
			同行候補キャラ番号:ARG:(LOCAL:1) = FINDCHARA(NAME, LOCALS:LOCAL)
			同行候補キャラ確率:ARG:(LOCAL:1) = TOINT(LOCALS:(LOCAL + 1))
			LOCAL:1 += 1
			LOCAL += 1
		NEXT
	ENDIF
	;招待時同行キャラをCSVから見直す
	VARSET LOCALS
	CSTR:ARG:同行キャラ = %CSVCSTR(NO:ARG, GETNUM(CSTR, "同行キャラ"))%
	REPLACE CSTR:ARG:同行キャラ, " ", ""
	SPLIT RESULTS, "%", LOCALS
	FOR LOCAL, 0, 100
		SIF LOCALS:LOCAL == ""
			BREAK
		SPLIT LOCALS:LOCAL, "_", CSTR切り分け文字列格納
		SIF FINDELEMENT(同行候補キャラ番号:ARG:0, FINDCHARA(NAME, CSTR切り分け文字列格納:0)) > -1
			CONTINUE
		;同行キャラ格納格納:0に名前、同行キャラ格納:1に確率が入っているはず
		同行候補キャラ番号:ARG:(LOCAL:1) = FINDCHARA(NAME, CSTR切り分け文字列格納:0)
		同行候補キャラ確率:ARG:(LOCAL:1) = TOINT(CSTR切り分け文字列格納:1)
		LOCAL:1 += 1
	NEXT
ENDIF

CALL 体力変動素質適用処理(ARG)
BASE:ARG:体力 = MAXBASE:ARG:体力

;引き継ぎバグ対応のため関係性はリセットしてあるので、全員セットし直す
CALL INIT_RELATION(ARG)

;性癖の設定
IF TALENT:ARG:性愛傾向 == 3
	性癖素質:ARG:同性愛 = 2
ENDIF

@弱点コマンド初期設定(ARG)
#DIMS 弱点候補_セクハラ, 200
#DIMS 弱点候補_うふふ, 200
#DIMS 敏感弱点候補_セクハラ, 200
#DIMS 敏感弱点候補_うふふ, 200
#DIM 敏感セクハラ候補数
#DIM 敏感うふふ候補数
#DIM セクハラ候補数
#DIM うふふ候補数
#DIM チェック完了

;弱点が全て埋まっている場合（=周回中）はここで処理終了
SIF MATCH(弱点コマンド枠:ARG:0, "", 0, 5) == 0 && MATCH(弱点コマンド枠:ARG:0, "-1", 0, 5) == 0
	RETURN

;弱点初期化
VARSET 弱点コマンド枠:ARG:0

;まず口上側で弱点の設定があるか見に行く
TRYCCALLFORM 弱点コマンド変更_{NO:ARG}
	;弱点が全て埋まった場合はここで処理終了
	SIF MATCH(弱点コマンド枠:ARG:0, "", 0, 5) == 0 && MATCH(弱点コマンド枠:ARG:0, "-1", 0, 5) == 0
		RETURN
CATCH
ENDCATCH

セクハラ候補数 = 0
うふふ候補数 = 0
敏感セクハラ候補数 = 0
敏感うふふ候補数 = 0


;敏感素質に対応した弱点候補をリスト化
FOR LOCAL, 0, 1000
	;お祭りコマンドは弱点候補にしない
	SIF INRANGE(LOCAL, 385, 389)
		CONTINUE
	;通常コマンド
	IF GETBIT(通常コマンド存在フラグ:LOCAL, 0)
		;口上側と被ってない場合+敏感素質に対応してる場合のみ
		IF !MATCH(弱点コマンド枠:ARG:0, @"{LOCAL}") && 敏感素質対応判定(ARG, @"COMTYPE_{LOCAL}")
			SELECTCASE 弱点コマンド候補判定(ARG, @"COMTYPE_{LOCAL}")
				CASE 1
					敏感弱点候補_セクハラ:敏感セクハラ候補数 = {LOCAL}
					敏感セクハラ候補数 += 1
				CASE 2
					敏感弱点候補_うふふ:敏感うふふ候補数 = {LOCAL}
					敏感うふふ候補数 += 1
			ENDSELECT
		ENDIF
		;派生コマンド
		FOR LOCAL:1, 0, 20
			SIF !GETBIT(通常コマンド存在フラグ:LOCAL, LOCAL:1 + 1)
				CONTINUE
			;口上側と被ってるOR敏感素質に対応してないなら飛ばす
			SIF MATCH(弱点コマンド枠:ARG:0, @"{LOCAL}_{LOCAL:1}") || !敏感素質対応判定(ARG, @"COMTYPE_S_{LOCAL}_{LOCAL:1}")
				CONTINUE
			SELECTCASE 弱点コマンド候補判定(ARG, @"COMTYPE_S_{LOCAL}_{LOCAL:1}")
				CASE 1
					敏感弱点候補_セクハラ:敏感セクハラ候補数 = {LOCAL}_{LOCAL:1}
					敏感セクハラ候補数 += 1
				CASE 2
					敏感弱点候補_うふふ:敏感うふふ候補数 = {LOCAL}_{LOCAL:1}
					敏感うふふ候補数 += 1
			ENDSELECT
		NEXT
	ENDIF
	;専用コマンド
	IF INRANGE(LOCAL, 370, 374)
		SIF !EXISTFUNCTION(@"COMTYPE_{LOCAL}_{NO:ARG}")
			CONTINUE
		;口上側と被ってるOR敏感素質に対応してないなら飛ばす
		SIF MATCH(弱点コマンド枠:ARG:0, @"{LOCAL}_{NO:ARG}") || !敏感素質対応判定(ARG, @"COMTYPE_{LOCAL}_{NO:ARG}")
			CONTINUE
		SELECTCASE 弱点コマンド候補判定(ARG, @"COMTYPE_{LOCAL}_{NO:ARG}")
			CASE 1
				敏感弱点候補_セクハラ:敏感セクハラ候補数 = {LOCAL}_{NO:ARG}
				敏感セクハラ候補数 += 1
			CASE 2
				敏感弱点候補_うふふ:敏感うふふ候補数 = {LOCAL}_{NO:ARG}
				敏感うふふ候補数 += 1
		ENDSELECT
	;場所固有コマンド
	ELSEIF INRANGE(LOCAL, 380, 384)
		FOR LOCAL:1, 0, 20
			FOR LOCAL:5, 0, 1
				FOR LOCAL:2, 0, 20
					SIF !GETBIT(場所固有コマンド存在フラグ:(LOCAL - 380):(LOCAL:5):(LOCAL:1), LOCAL:2)
						CONTINUE
					LOCAL:3 = LOCAL:1 * 100 + LOCAL : 2 + 1
					;口上側と被ってるなら飛ばす
					SIF MATCH(弱点コマンド枠:ARG:0, @"{LOCAL}_{LOCAL:5}_{LOCAL:3}") || !敏感素質対応判定(ARG, @"COMTYPE_{LOCAL}_{LOCAL:5}_{LOCAL:3}")
						CONTINUE
					SELECTCASE 弱点コマンド候補判定(ARG, @"COMTYPE_{LOCAL}_{LOCAL:5}_{LOCAL:3}")
						CASE 1
							敏感弱点候補_セクハラ:敏感セクハラ候補数 = {LOCAL}_{LOCAL:3}
							敏感セクハラ候補数 += 1
						CASE 2
							敏感弱点候補_うふふ:敏感うふふ候補数 = {LOCAL}_{LOCAL:3}
							敏感うふふ候補数 += 1
					ENDSELECT
				NEXT
			NEXT
		NEXT
	ENDIF
NEXT


;敏感対応の候補からセクハラとうふふに一つずつ設定
;ただし、以下の条件を守る
;・弱点コマンド枠は最低一つ空ける
;・うふふとセクハラのどちらか一つしか入らないならうふふ優先

;うふふ設定
LOCAL = 0
WHILE 1
	SIF LOCAL > 3 || !敏感うふふ候補数
		BREAK
	IF 弱点コマンド枠:ARG:LOCAL != "" && 弱点コマンド枠:ARG:LOCAL != "-1"
		LOCAL ++
		CONTINUE
	ENDIF
	LOCAL:1 = RAND:敏感うふふ候補数
	弱点コマンド枠:ARG:LOCAL = %敏感弱点候補_うふふ:(LOCAL:1)%
	BREAK
WEND

;セクハラ設定
LOCAL = 0
WHILE 1
	SIF LOCAL > 3 || !敏感セクハラ候補数
		BREAK
	IF 弱点コマンド枠:ARG:LOCAL != "" && 弱点コマンド枠:ARG:LOCAL != "-1"
		LOCAL ++
		CONTINUE
	ENDIF
	LOCAL:1 = RAND:敏感セクハラ候補数
	弱点コマンド枠:ARG:LOCAL = %敏感弱点候補_セクハラ:(LOCAL:1)%
	BREAK
WEND

;弱点候補リスト化
FOR LOCAL, 0, 1000
	;お祭りコマンドは弱点候補にしない
	SIF INRANGE(LOCAL, 385, 389)
		CONTINUE
	;通常コマンド
	IF GETBIT(通常コマンド存在フラグ:LOCAL, 0)
		;口上側と被ってない場合のみ
		IF !MATCH(弱点コマンド枠:ARG:0, @"{LOCAL}")
			SELECTCASE 弱点コマンド候補判定(ARG, @"COMTYPE_{LOCAL}")
				CASE 1
					弱点候補_セクハラ:セクハラ候補数 = {LOCAL}
					セクハラ候補数 += 1
				CASE 2
					弱点候補_うふふ:うふふ候補数 = {LOCAL}
					うふふ候補数 += 1
			ENDSELECT
		ENDIF
		;派生コマンド
		FOR LOCAL:1, 0, 20
			SIF !GETBIT(通常コマンド存在フラグ:LOCAL, LOCAL:1 + 1)
				CONTINUE
			;口上側と被ってるなら飛ばす
			SIF MATCH(弱点コマンド枠:ARG:0, @"{LOCAL}_{LOCAL:1}")
				CONTINUE
			SELECTCASE 弱点コマンド候補判定(ARG, @"COMTYPE_S_{LOCAL}_{LOCAL:1}")
				CASE 1
					弱点候補_セクハラ:セクハラ候補数 = {LOCAL}_{LOCAL:1}
					セクハラ候補数 += 1
				CASE 2
					弱点候補_うふふ:うふふ候補数 = {LOCAL}_{LOCAL:1}
					うふふ候補数 += 1
			ENDSELECT
		NEXT
	ENDIF
	;専用コマンド
	IF INRANGE(LOCAL, 370, 374)
		SIF !EXISTFUNCTION(@"COMTYPE_{LOCAL}_{NO:ARG}")
			CONTINUE
		;口上側と被ってるなら飛ばす
		SIF MATCH(弱点コマンド枠:ARG:0, @"{LOCAL}_{NO:ARG}")
			CONTINUE
		SELECTCASE 弱点コマンド候補判定(ARG, @"COMTYPE_{LOCAL}_{NO:ARG}")
			CASE 1
				弱点候補_セクハラ:セクハラ候補数 = {LOCAL}_{NO:ARG}
				セクハラ候補数 += 1
			CASE 2
				弱点候補_うふふ:うふふ候補数 = {LOCAL}_{NO:ARG}
				うふふ候補数 += 1
		ENDSELECT
	;場所固有コマンド
	ELSEIF INRANGE(LOCAL, 380, 384)
		FOR LOCAL:1, 0, 20
			FOR LOCAL:2, 0, 20
				SIF !GETBIT(場所固有コマンド存在フラグ:(LOCAL - 380):(LOCAL:5):(LOCAL:1), LOCAL:2)
					CONTINUE
				LOCAL:3 = LOCAL:1 * 100 + LOCAL : 2 + 1
				;口上側と被ってるなら飛ばす
				SIF MATCH(弱点コマンド枠:ARG:0, @"{LOCAL}_{LOCAL:5}_{LOCAL:3}")
					CONTINUE
				SELECTCASE 弱点コマンド候補判定(ARG, @"COMTYPE_{LOCAL}_{LOCAL:5}_{LOCAL:3}")
					CASE 1
						弱点候補_セクハラ:セクハラ候補数 = {LOCAL}_{LOCAL:5}_{LOCAL:3}
						セクハラ候補数 += 1
					CASE 2
						弱点候補_うふふ:うふふ候補数 = {LOCAL}_{LOCAL:5}_{LOCAL:3}
						うふふ候補数 += 1
				ENDSELECT
			NEXT
		NEXT
	ENDIF
NEXT

;空いている枠にセクハラ系から２つ、うふふ系から２つ、完全ランダムで１つ設定する

FOR LOCAL, 0, 5
	SIF 弱点コマンド枠:ARG:LOCAL != "" && 弱点コマンド枠:ARG:LOCAL != "-1"
		CONTINUE
	SELECTCASE LOCAL
		CASE 0 TO 1
			LOCAL:1 = RAND:セクハラ候補数
			弱点コマンド枠:ARG:LOCAL = %弱点候補_セクハラ:(LOCAL:1)%
			FOR LOCAL:2, LOCAL:1, セクハラ候補数
				弱点候補_セクハラ:(LOCAL:2) = %弱点候補_セクハラ:(LOCAL:2 + 1)%
			NEXT
			セクハラ候補数 -= 1
		CASE 2 TO 3
			LOCAL:1 = RAND:うふふ候補数
			弱点コマンド枠:ARG:LOCAL = %弱点候補_うふふ:(LOCAL:1)%
			FOR LOCAL:2, LOCAL:1, うふふ候補数
				弱点候補_うふふ:(LOCAL:2) = %弱点候補_うふふ:(LOCAL:2 + 1)%
			NEXT
			うふふ候補数 -= 1
		CASEELSE
			LOCAL:1 = RAND:(セクハラ候補数 + うふふ候補数)
			IF LOCAL:1 < セクハラ候補数
				弱点コマンド枠:ARG:LOCAL = %弱点候補_セクハラ:(LOCAL:1)%
			ELSE
				弱点コマンド枠:ARG:LOCAL = %弱点候補_うふふ:(LOCAL:1 - セクハラ候補数)%
			ENDIF
	ENDSELECT
NEXT

@弱点コマンド候補判定(ARG, ARGS)
;返り値
;0=候補外
;1=弱点候補_セクハラ
;2=弱点候補_うふふ
#FUNCTION
弱点コマンドカテゴリ = 
TFLAG:コマンドタイプ受渡 = 999
CALLFORMF %ARGS%
SIF 弱点コマンドカテゴリ == ""
	RETURNF 0
SIF STRFIND(弱点コマンドカテゴリ, "角") >= 0 && TALENT:ARG:角あり == 0
	RETURNF 0
SIF STRFIND(弱点コマンドカテゴリ, "尻尾") >= 0 && TALENT:ARG:尻尾あり == 0
	RETURNF 0
SIF STRFIND(弱点コマンドカテゴリ, "ちんこ") >= 0 && GETBIT(TALENT:ARG:性別, 1) == 0
	RETURNF 0
SIF STRFIND(弱点コマンドカテゴリ, "女") >= 0 && GETBIT(TALENT:ARG:性別, 0) == 0
	RETURNF 0
SIF STRFIND(弱点コマンドカテゴリ, "V") >= 0 && GETBIT(TALENT:ARG:性別, 0) == 0
	RETURNF 0
IF GET_性癖素質NAME(GETNUM(性癖素質, "同性愛"), ARG) == "異性愛"
	;性癖名が異性愛＝[女性愛]持ち女性or[男性愛]持ち男性
	SIF STRFIND(弱点コマンドカテゴリ, "異性") >= 0 && 性癖素質:ARG:同性愛 <= 0
		RETURNF 0
ELSE
	SIF STRFIND(弱点コマンドカテゴリ, "同性") >= 0 && 性癖素質:ARG:同性愛 <= 0
		RETURNF 0
ENDIF
SELECTCASE TFLAG:コマンドタイプ受渡
	CASE 1 TO 3
		RETURNF 1
	CASE 100, 101
		;複数コマンド
		SIF STRFIND(TSTR:複合コマンドタイプ受け渡し, "セクハラ") >= 0
			RETURNF 1
		SIF STRFIND(TSTR:複合コマンドタイプ受け渡し, "うふふ") >= 0 || STRFIND(TSTR:複合コマンドタイプ受け渡し, "Ｖ系") >= 0 || STRFIND(TSTR:複合コマンドタイプ受け渡し,"Ａ系") >= 0 || STRFIND(TSTR:複合コマンドタイプ受け渡し, "道具系") >= 0
			RETURNF 2
	CASEELSE
		;うふふ扱い
		RETURNF 2
ENDSELECT

@弱点コマンドランダム選出(ARG)
#DIMS 弱点候補, 1000
#DIM 弱点候補数

VARSET 弱点候補
弱点候補数 = 0
;弱点候補リスト化
FOR LOCAL, 0, 1000
	;お祭りコマンドは弱点候補にしない
	SIF INRANGE(LOCAL, 385, 389)
		CONTINUE
	;通常コマンド
	IF GETBIT(通常コマンド存在フラグ:LOCAL, 0)
		;口上側と被ってない場合のみ
		IF !MATCH(弱点コマンド枠:ARG:0, @"{LOCAL}") && 弱点コマンド候補判定(ARG, @"COMTYPE_{LOCAL}")
			弱点候補:弱点候補数 = {LOCAL}
			弱点候補数 += 1
		ENDIF
		;派生コマンド
		FOR LOCAL:1, 0, 20
			SIF !GETBIT(通常コマンド存在フラグ:LOCAL, LOCAL:1 + 1)
				CONTINUE
			;口上側と被ってるなら飛ばす
			IF !MATCH(弱点コマンド枠:ARG:0, @"{LOCAL}_{LOCAL:1}") && 弱点コマンド候補判定(ARG, @"COMTYPE_S_{LOCAL}_{LOCAL:1}")
				弱点候補:弱点候補数 = {LOCAL}_{LOCAL:1}
				弱点候補数 += 1
			ENDIF
		NEXT
	ENDIF
	;専用コマンド
	IF INRANGE(LOCAL, 370, 374)
		SIF !EXISTFUNCTION(@"COMTYPE_{LOCAL}_{NO:ARG}")
			CONTINUE
		;口上側と被ってるなら飛ばす
		IF !MATCH(弱点コマンド枠:ARG:0, @"{LOCAL}_{NO:ARG}") && 弱点コマンド候補判定(ARG, @"COMTYPE_{LOCAL}_{NO:ARG}")
			弱点候補:弱点候補数 = {LOCAL}_{NO:ARG}
			弱点候補数 += 1
		ENDIF
	;場所固有コマンド
	ELSEIF INRANGE(LOCAL, 380, 384)
		FOR LOCAL:1, 0, 20
			FOR LOCAL:2, 0, 20
				SIF !GETBIT(場所固有コマンド存在フラグ:(LOCAL - 380):(LOCAL:5):(LOCAL:1), LOCAL:2)
					CONTINUE
				LOCAL:3 = LOCAL:1 * 100 + LOCAL : 2 + 1
				;口上側と被ってるなら飛ばす
				IF !MATCH(弱点コマンド枠:ARG:0, @"{LOCAL}_{LOCAL:5}_{LOCAL:3}") && 弱点コマンド候補判定(ARG, @"COMTYPE_{LOCAL}_{LOCAL:5}_{LOCAL:3}")
					弱点候補:弱点候補数 = {LOCAL}_{LOCAL:5}_{LOCAL:3}
					弱点候補数 += 1
				ENDIF
			NEXT
		NEXT
	ENDIF
NEXT


SIF 弱点候補数 > 0
	RESULTS = %弱点候補:(RAND:弱点候補数)%


@敏感素質対応判定(ARG, ARGS)
#FUNCTION
;敏感素質を検出
弱点コマンドカテゴリ = 
CALLFORMF %ARGS%
;弱点コマンドカテゴリに対応する敏感素質があれば1を返す
SIF 弱点コマンドカテゴリ == ""
	RETURNF 0
SIF STRFIND(弱点コマンドカテゴリ, "C") >= 0 && TALENT:ARG:Ｃ感度 > 0
	RETURNF 1
SIF STRFIND(弱点コマンドカテゴリ, "V") >= 0 && TALENT:ARG:Ｖ感度 > 0
	RETURNF 1
SIF STRFIND(弱点コマンドカテゴリ, "A") >= 0 && TALENT:ARG:Ａ感度 > 0
	RETURNF 1
SIF STRFIND(弱点コマンドカテゴリ, "B") >= 0 && TALENT:ARG:Ｂ感度 > 0
	RETURNF 1
SIF STRFIND(弱点コマンドカテゴリ, "S") >= 0 && TALENT:ARG:Ｓ感度 > 0
	RETURNF 1
;ここまで来た時点で該当するものがないのでオワリ
RETURNF 0

@コマンド存在チェック
#DIM コマンド総数
#DIM ループ用

コマンド総数 = ENUMFUNCBEGINSWITH("COMTYPE_")

;通常コマンド
FOR LOCAL, 0, 1000
	IF MATCH(RESULTS, @"COMTYPE_{LOCAL}")
		SETBIT 通常コマンド存在フラグ:LOCAL, 0
		;派生コマンド
		FOR LOCAL:1, 0, 20
			SIF MATCH(RESULTS, @"COMTYPE_S_{LOCAL}_{LOCAL:1}")
				SETBIT 通常コマンド存在フラグ:LOCAL, LOCAL:1 + 1
		NEXT
	ENDIF
NEXT
;場所固有コマンド
FOR LOCAL, 0, 5
	FOR LOCAL:3, 0, 1
		FOR LOCAL:1, 0, 20
			FOR LOCAL:2, 0, 20
				SIF MATCH(RESULTS, @"COMTYPE_{LOCAL + 380}_{LOCAL:3}_{LOCAL:1 * 100 + LOCAL:2 + 1}")
					SETBIT 場所固有コマンド存在フラグ:LOCAL:(LOCAL:3):(LOCAL:1), LOCAL:2
			NEXT
		NEXT
	NEXT
NEXT

@年齢層算出処理(年齢)
#FUNCTION
#DIM 年齢
#DIM ループ用

FOR ループ用, 年齢層_幼い, 年齢層_老年 + 1
	SIF 年齢 < 年齢ボーダー:ループ用
		RETURNF ループ用
NEXT
RETURNF 年齢層_年齢不詳

@体力変動素質適用処理(キャラ番号)
#DIM キャラ番号
#DIM 体力計算値

体力計算値 = CSVBASE(NO:キャラ番号, 0)

;素質によって体力を加算減算する
SIF GETBIT(TALENT:キャラ番号:性別, 0) && TALENT:キャラ番号:処女 == 0
	体力計算値 += 200
SIF GETBIT(TALENT:キャラ番号:性別, 1) && TALENT:キャラ番号:非童貞 > 0
	体力計算値 += 200
体力計算値 += TALENT:キャラ番号:度胸 * 50
SIF TALENT:キャラ番号:精神的余裕 > 0
	体力計算値 += 100
体力計算値 += TALENT:キャラ番号:性的興味 * 100
体力計算値 += TALENT:キャラ番号:性欲 * 100
体力計算値 += TALENT:キャラ番号:経験豊富 * 200
体力計算値 += TALENT:キャラ番号:自慰しやすい * 50
体力計算値 += TALENT:キャラ番号:快感応答 * 50
体力計算値 += TALENT:キャラ番号:絶倫 * 400
体力計算値 += TALENT:キャラ番号:子持ち * 400
IF TALENT:キャラ番号:恋人持ち > 0
	体力計算値 += 300
ELSEIF TALENT:キャラ番号:セフレあり
	体力計算値 += 700
ENDIF
SIF 知識素質:キャラ番号:性知識 > 0
	体力計算値 += 知識素質:キャラ番号:性知識 * 200

SIF CFLAG:キャラ番号:元気になる薬フラグ > 0
	体力計算値 += 1000

SELECTCASE あなた特殊能力:体力成長の加護
	CASE 1
		体力計算値 += EXP:キャラ番号:ダウン経験 * 10
	CASE 2
		体力計算値 += EXP:キャラ番号:ダウン経験 * 15
	CASE 3
		体力計算値 += EXP:キャラ番号:ダウン経験 * 20
	CASE 4
		体力計算値 += EXP:キャラ番号:ダウン経験 * 30
ENDSELECT

;初期EXPによる変動は行わない（数値の設定バランスが記述者によってまちまちなため）

;体力成長分適用
体力計算値 += CFLAG:キャラ番号:体力成長値

MAXBASE:キャラ番号:体力 = MIN(体力計算値, 9999)
SIF 妊娠時疲労(キャラ番号)
	MAXBASE:キャラ番号:体力 -= 妊娠時疲労(キャラ番号,1)
BASE:キャラ番号:体力 = MIN(MAXBASE:キャラ番号:体力, BASE:キャラ番号:体力)
;性欲は体力と同値
;発情期は性欲ゲージにのみ掛かる
IF CFLAG:キャラ番号:発情期フラグ < 0
	体力計算値 = MIN(体力計算値 * 3 / 2, 9999)
ENDIF
MAXBASE:キャラ番号:性欲 = MIN(体力計算値, 9999)
BASE:キャラ番号:性欲 = MIN(MAXBASE:キャラ番号:性欲, BASE:キャラ番号:性欲)
MAXBASE:キャラ番号:満足 = MIN(体力計算値, 9999)
BASE:キャラ番号:満足 = 0


@イベントデータベースセット

DT_CREATE "各イベント用変数配列"
DT_COLUMN_ADD "各イベント用変数配列", "イベント名"
DT_COLUMN_ADD "各イベント用変数配列", "イベントカテゴリ"
DT_COLUMN_ADD "各イベント用変数配列", "イベント発生フラグ", 3
DT_COLUMN_ADD "各イベント用変数配列", "イベント完了フラグ", 3
DT_COLUMN_ADD "各イベント用変数配列", "フリー変数１", 3
DT_COLUMN_ADD "各イベント用変数配列", "フリー変数２", 3
DT_COLUMN_ADD "各イベント用変数配列", "フリー変数３", 3
DT_COLUMN_ADD "各イベント用変数配列", "フリー文字列１"
DT_COLUMN_ADD "各イベント用変数配列", "フリー文字列２"
DT_COLUMN_ADD "各イベント用変数配列", "フリー文字列３"
DT_COLUMN_ADD "各イベント用変数配列", "イベント再発生CT", 3
DT_COLUMN_ADD "各イベント用変数配列", "イベント再発生確率", 3
DT_COLUMN_ADD "各イベント用変数配列", "イベント消滅CT", 3
DT_COLUMN_ADD "各イベント用変数配列", "イベント消滅確率", 3
DT_COLUMN_ADD "各イベント用変数配列", "汎用イベ用_キャラNO保存", 3
CALL イベント追加チェック


@イベント追加チェック
#DIM イベント数
#DIMS イベント名保存
VARSET LOCAL
VARSET LOCALS

FOR LOCAL, 0, DT_ROW_LENGTH("各イベント用変数配列")
	LOCALS:LOCAL = %DT_CELL_GETS("各イベント用変数配列", LOCAL, "イベント名")%
NEXT

イベント数 = ENUMFUNCBEGINSWITH("イベント関数_メインシナリオ_")
FOR LOCAL, 0, イベント数
	イベント名保存 = %SUBSTRING(RESULTS:LOCAL, 28)%
	IF FINDELEMENT(LOCALS, イベント名保存, , , 1) < 0
		DT_ROW_ADD "各イベント用変数配列", "イベント名", イベント名保存, "イベントカテゴリ", "メインシナリオ"
	ENDIF
NEXT

イベント数 = ENUMFUNCBEGINSWITH("イベント関数_サブイベント_")
FOR LOCAL, 0, イベント数
	イベント名保存 = %SUBSTRING(RESULTS:LOCAL, 26)%
	IF FINDELEMENT(LOCALS, イベント名保存, , , 1) < 0
		DT_ROW_ADD "各イベント用変数配列", "イベント名", イベント名保存, "イベントカテゴリ", "サブイベント"
	ENDIF
NEXT

イベント数 = ENUMFUNCBEGINSWITH("イベント関数_キャライベント_")
FOR LOCAL, 0, イベント数
	イベント名保存 = %SUBSTRING(RESULTS:LOCAL, 28)%
	IF FINDELEMENT(LOCALS, イベント名保存, , , 1) < 0
		DT_ROW_ADD "各イベント用変数配列", "イベント名", イベント名保存, "イベントカテゴリ", "キャライベント"
	ENDIF
NEXT

;汎用イベントを突っ込む
FOR LOCAL, 0, CHARANUM
	IF GETBIT(TALENT:LOCAL:陥落不可, 0) && !CFLAG:LOCAL:恋慕不可_汎用解除禁止
		イベント名保存 = %ESCAPE(@"【汎用】%CALLNAME:LOCAL%[恋慕不可]解除")%
		IF FINDELEMENT(LOCALS, イベント名保存, , , 1) < 0
			IF NO:LOCAL == 999
				DT_ROW_ADD "各イベント用変数配列", "イベント名", @"【汎用】%CALLNAME:LOCAL%[恋慕不可]解除", "イベントカテゴリ", "キャライベント", "汎用イベ用_キャラNO保存", LOCAL + 90000
			ELSE
				DT_ROW_ADD "各イベント用変数配列", "イベント名", @"【汎用】%CALLNAME:LOCAL%[恋慕不可]解除", "イベントカテゴリ", "キャライベント", "汎用イベ用_キャラNO保存", NO:LOCAL
			ENDIF
		ENDIF
	ENDIF
	IF GETBIT(TALENT:LOCAL:陥落不可, 1) && !CFLAG:LOCAL:セフレ不可_汎用解除禁止
		イベント名保存 = %ESCAPE(@"【汎用】%CALLNAME:LOCAL%[セフレ不可]解除")%
		IF FINDELEMENT(LOCALS, イベント名保存, , , 1) < 0
			IF NO:LOCAL == 999
				DT_ROW_ADD "各イベント用変数配列", "イベント名", @"【汎用】%CALLNAME:LOCAL%[セフレ不可]解除", "イベントカテゴリ", "キャライベント", "汎用イベ用_キャラNO保存", LOCAL + 90000
			ELSE
				DT_ROW_ADD "各イベント用変数配列", "イベント名", @"【汎用】%CALLNAME:LOCAL%[セフレ不可]解除", "イベントカテゴリ", "キャライベント", "汎用イベ用_キャラNO保存", NO:LOCAL
			ENDIF
		ENDIF
	ENDIF
NEXT

イベント数 = ENUMFUNCBEGINSWITH("イベント関数_突発イベント_")
FOR LOCAL, 0, イベント数
	イベント名保存 = %SUBSTRING(RESULTS:LOCAL, 26)%
	IF FINDELEMENT(LOCALS, イベント名保存, , , 1) < 0
		DT_ROW_ADD "各イベント用変数配列", "イベント名", イベント名保存, "イベントカテゴリ", "突発イベント"
	ENDIF
NEXT

@イベント削除チェック
#DIM イベント数
#DIM 対象キャラ
#DIMS イベント名保存
VARSET LOCAL

FOR LOCAL, 0, DT_ROW_LENGTH("各イベント用変数配列")
	イベント名保存 = %DT_CELL_GETS("各イベント用変数配列", LOCAL, "イベント名")%
	イベント数 = ENUMFUNCBEGINSWITH(@"イベント関数_メインシナリオ_%イベント名保存%")
	イベント数 += ENUMFUNCBEGINSWITH(@"イベント関数_サブイベント_%イベント名保存%")
	イベント数 += ENUMFUNCBEGINSWITH(@"イベント関数_キャライベント_%イベント名保存%")
	イベント数 += ENUMFUNCBEGINSWITH(@"イベント関数_突発イベント_%イベント名保存%")
	;汎用イベを見る
	IF STRCOUNT(イベント名保存, "【汎用】")
		対象キャラ = DT_CELL_GET("各イベント用変数配列", LOCAL, "汎用イベ用_キャラNO保存")
		IF 対象キャラ > 90000
			対象キャラ = 対象キャラ - 90000
		ELSE
			対象キャラ = GETCHARA(対象キャラ)
		ENDIF
		IF STRCOUNT(イベント名保存, "恋慕不可]解除") && !CFLAG:対象キャラ:恋慕不可_汎用解除禁止
			イベント数 = 1
		ELSEIF STRCOUNT(イベント名保存, "セフレ不可]解除") && !CFLAG:対象キャラ:セフレ不可_汎用解除禁止
			イベント数 = 1
		ENDIF
	ENDIF
	IF イベント数 < 1
		DT_ROW_REMOVE "各イベント用変数配列", DT_CELL_GET("各イベント用変数配列", LOCAL, "id")
	ENDIF
NEXT



@アイテムデータベースセット
DT_CREATE "所持アイテムデータベース"
DT_ROW_ADD "所持アイテムデータベース"
DT_ROW_ADD "所持アイテムデータベース"

@指輪データベースセット
DT_CREATE "所持指輪データベース"
DT_COLUMN_ADD "所持指輪データベース", "指輪名"
DT_COLUMN_ADD "所持指輪データベース", "基礎ステータス補正"
DT_COLUMN_ADD "所持指輪データベース", "特殊ステータス補正"
DT_COLUMN_ADD "所持指輪データベース", "オプションステータス補正"
DT_COLUMN_ADD "所持指輪データベース", "オプション特殊ステータス補正"
DT_COLUMN_ADD "所持指輪データベース", "装備キャラ番号", 3
;DT_COLUMN_ADD "所持指輪データベース", "装備者キャラ番号", 1
;0番にはダミーデータ
LOCAL = DT_ROW_ADD("所持指輪データベース")

@耳飾りデータベースセット
DT_CREATE "所持耳飾りデータベース"
DT_COLUMN_ADD "所持耳飾りデータベース", "耳飾り名"
DT_COLUMN_ADD "所持耳飾りデータベース", "変更属性"
DT_COLUMN_ADD "所持耳飾りデータベース", "奥義補正"
DT_COLUMN_ADD "所持耳飾りデータベース", "奥義名補正"
DT_COLUMN_ADD "所持耳飾りデータベース", "装備キャラ番号", 3
;DT_COLUMN_ADD "所持耳飾りデータベース", "装備者キャラ番号", 1
;0番にはダミーデータ
LOCAL = DT_ROW_ADD("所持耳飾りデータベース")

@ジョブ証データベースセット
DT_CREATE "所持ジョブ証データベース"
DT_COLUMN_ADD "所持ジョブ証データベース", "ジョブ証名"
DT_COLUMN_ADD "所持ジョブ証データベース", "改造履歴"
DT_COLUMN_ADD "所持ジョブ証データベース", "ジョブ証種別"
;0番にはダミーデータ
LOCAL = DT_ROW_ADD("所持ジョブ証データベース")

@乗機データベースセット
DT_CREATE "所持乗機データベース"
DT_COLUMN_ADD "所持乗機データベース", "乗機名"
DT_COLUMN_ADD "所持乗機データベース", "乗機攻撃力", 3
DT_COLUMN_ADD "所持乗機データベース", "乗機攻撃力_強化後", 3
DT_COLUMN_ADD "所持乗機データベース", "乗機命中率", 3
DT_COLUMN_ADD "所持乗機データベース", "乗機命中率_強化後", 3
DT_COLUMN_ADD "所持乗機データベース", "乗機属性", 1
DT_COLUMN_ADD "所持乗機データベース", "乗機属性_強化後", 1
DT_COLUMN_ADD "所持乗機データベース", "武装0"
DT_COLUMN_ADD "所持乗機データベース", "武装1"
DT_COLUMN_ADD "所持乗機データベース", "武装2"
DT_COLUMN_ADD "所持乗機データベース", "武装3"
DT_COLUMN_ADD "所持乗機データベース", "武装4"
DT_COLUMN_ADD "所持乗機データベース", "武装5"
DT_COLUMN_ADD "所持乗機データベース", "強化後武装0"
DT_COLUMN_ADD "所持乗機データベース", "強化後武装1"
DT_COLUMN_ADD "所持乗機データベース", "強化後武装2"
DT_COLUMN_ADD "所持乗機データベース", "強化後武装3"
DT_COLUMN_ADD "所持乗機データベース", "強化後武装4"
DT_COLUMN_ADD "所持乗機データベース", "強化後武装5"
;あなたが使うだけだからこれいらないと思うんだけど将来的に使うパターンに備えて列だけ置いとく
DT_COLUMN_ADD "所持乗機データベース", "装備キャラ番号", 3
;このフラグが立ってる時は持ってない。設計可能
DT_COLUMN_ADD "所持乗機データベース", "設計状態フラグ", 1
;何人サブパイロットが乗れるか？
DT_COLUMN_ADD "所持乗機データベース", "サブ搭乗数", 1
DT_COLUMN_ADD "所持乗機データベース", "サブ搭乗数_強化後", 1

@所持兵器データベースセット
DT_CREATE "所持兵器データベース"
DT_COLUMN_ADD "所持兵器データベース", "兵器名"
DT_COLUMN_ADD "所持兵器データベース", "攻撃力補正", 3
DT_COLUMN_ADD "所持兵器データベース", "攻撃力補正_強化後", 3
DT_COLUMN_ADD "所持兵器データベース", "命中率補正", 3
DT_COLUMN_ADD "所持兵器データベース", "命中率補正_強化後", 3
DT_COLUMN_ADD "所持兵器データベース", "攻撃力変動値", 3
DT_COLUMN_ADD "所持兵器データベース", "攻撃力変動値_強化後", 3
DT_COLUMN_ADD "所持兵器データベース", "命中率変動値", 3
DT_COLUMN_ADD "所持兵器データベース", "命中率変動値_強化後", 3
DT_COLUMN_ADD "所持兵器データベース", "残弾種別", 1
DT_COLUMN_ADD "所持兵器データベース", "残弾数", 1
DT_COLUMN_ADD "所持兵器データベース", "残弾数_強化後", 1
DT_COLUMN_ADD "所持兵器データベース", "兵器カテゴリ"
DT_COLUMN_ADD "所持兵器データベース", "兵器距離適性"
DT_COLUMN_ADD "所持兵器データベース", "装備乗機id", 4
;このフラグが立ってる時は持ってない。設計可能
DT_COLUMN_ADD "所持兵器データベース", "設計状態フラグ", 1

@戦闘用データベースセット
FOR LOCAL, 0, 4
	DT_CREATE @"バフデータベース_{LOCAL}"
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "バフ枠"
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "バフ対象能力"
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "バフ効果量_割合", 3
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "バフ効果量_固定値", 3
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "バフ名"
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "持続ターン", 3
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "持続回数", 3
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "持続行動回数", 3
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "持続被ダメ回数", 3
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "消去不可フラグ", 1
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "特殊表示オプション", 1
	DT_CREATE @"デバフデータベース_{LOCAL}"
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "デバフ枠"
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "デバフ対象能力"
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "デバフ効果量_割合", 3
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "デバフ効果量_固定値", 3
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "デバフ名"
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "持続ターン", 3
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "持続回数", 3
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "持続行動回数", 3
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "持続被ダメ回数", 3
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "消去不可フラグ", 1
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "特殊表示オプション", 1
NEXT

FOR LOCAL, 10, 20
	DT_CREATE @"バフデータベース_{LOCAL}"
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "バフ枠"
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "バフ対象能力"
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "バフ効果量_割合", 3
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "バフ効果量_固定値", 3
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "バフ名"
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "持続ターン", 3
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "持続回数", 3
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "持続行動回数", 3
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "持続被ダメ回数", 3
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "消去不可フラグ", 1
	DT_COLUMN_ADD @"バフデータベース_{LOCAL}", "特殊表示オプション", 1
	DT_CREATE @"デバフデータベース_{LOCAL}"
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "デバフ枠"
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "デバフ対象能力"
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "デバフ効果量_割合", 3
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "デバフ効果量_固定値", 3
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "デバフ名"
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "持続ターン", 3
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "持続回数", 3
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "持続行動回数", 3
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "持続被ダメ回数", 3
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "消去不可フラグ", 1
	DT_COLUMN_ADD @"デバフデータベース_{LOCAL}", "特殊表示オプション", 1
NEXT

@素材アイテムデータベースセット
DT_CREATE "所持素材データベース"
DT_COLUMN_ADD "所持素材データベース", "素材アイテム名"
DT_COLUMN_ADD "所持素材データベース", "所持素材数", 3
DT_COLUMN_ADD "所持素材データベース", "累計入手素材数", 3
DT_COLUMN_ADD "所持素材データベース", "素材カテゴリ"
DT_COLUMN_ADD "所持素材データベース", "素材ランク", 1
DT_COLUMN_ADD "所持素材データベース", "素材属性", 1
DT_COLUMN_ADD "所持素材データベース", "素材値相場", 3
DT_COLUMN_ADD "所持素材データベース", "プレゼントカテゴリ"
DT_COLUMN_ADD "所持素材データベース", "食材分類"

@食堂メニューデータベースセット
DT_CREATE "料理メニューデータベース"
DT_COLUMN_ADD "料理メニューデータベース", "メニュー名"
DT_COLUMN_ADD "料理メニューデータベース", "料理ランク", 1
DT_COLUMN_ADD "料理メニューデータベース", "料理属性", 1
DT_COLUMN_ADD "料理メニューデータベース", "ルピ収入補正", 3
DT_COLUMN_ADD "料理メニューデータベース", "ZP収入補正", 3
DT_COLUMN_ADD "料理メニューデータベース", "メイン食材ID", 4
DT_COLUMN_ADD "料理メニューデータベース", "追加食材１ID", 4
DT_COLUMN_ADD "料理メニューデータベース", "追加食材２ID", 4
DT_COLUMN_ADD "料理メニューデータベース", "追加食材３ID", 4
DT_COLUMN_ADD "料理メニューデータベース", "調理器具ID", 1
DT_COLUMN_ADD "料理メニューデータベース", "特殊料理フラグ", 1

@写真データベースセット
DT_CREATE "写真データベース"
DT_COLUMN_ADD "写真データベース", "写真タイトル"
DT_COLUMN_ADD "写真データベース", "撮影日時"
DT_COLUMN_ADD "写真データベース", "撮影マップ種別", 3
DT_COLUMN_ADD "写真データベース", "撮影場所", 3
DT_COLUMN_ADD "写真データベース", "撮影場所名前"
DT_COLUMN_ADD "写真データベース", "撮影対象NAME"
DT_COLUMN_ADD "写真データベース", "撮影対象NO", 3
DT_COLUMN_ADD "写真データベース", "撮影シチュカテゴリ", 1
DT_COLUMN_ADD "写真データベース", "撮影対象画像リソース"
DT_COLUMN_ADD "写真データベース", "撮影時追加文字列１"
DT_COLUMN_ADD "写真データベース", "撮影時追加文字列２"
DT_COLUMN_ADD "写真データベース", "撮影時追加文字列３"
DT_COLUMN_ADD "写真データベース", "写真添付口上"
DT_COLUMN_ADD "写真データベース", "写真添付メモ"

@従業員業務用マップセット
MAP_CREATE "常駐業務名"
MAP_SET "常駐業務名", "ロビー", "ロビー受付"
MAP_SET "常駐業務名", "バーエリア", "バーテンダー"
MAP_SET "常駐業務名", "図書室", "司書"
MAP_SET "常駐業務名", "プールサイド", "プール監視員"
MAP_SET "常駐業務名", "プール", "プール監視員"
MAP_SET "常駐業務名", "道具屋", "道具屋"
MAP_SET "常駐業務名", "土産物屋", "土産物屋"
MAP_SET "常駐業務名", "食事処", "食事処"
MAP_SET "常駐業務名", "装飾品店", "装飾品店"

@編成画面情報用マップセット
MAP_CREATE "編成画面情報"
MAP_SET "編成画面情報", "ロビー", "ロビー受付"
MAP_SET "編成画面情報", "バーエリア", "バーテンダー"
MAP_SET "編成画面情報", "図書室", "司書"
MAP_SET "編成画面情報", "プールサイド", "プール監視員"
MAP_SET "編成画面情報", "プール", "プール監視員"
MAP_SET "編成画面情報", "道具屋", "道具屋"
MAP_SET "編成画面情報", "土産物屋", "土産物屋"
MAP_SET "編成画面情報", "食事処", "食事処"
MAP_SET "編成画面情報", "装飾品店", "装飾品店"

@自動探索用マップセット
MAP_CREATE "自動探索対象ダンジョン"

@体位モードデータベースセット
DT_CREATE "体位モードデータベース"
DT_COLUMN_ADD "体位モードデータベース", "モード名"
DT_COLUMN_ADD "体位モードデータベース", "実行キャラ", 3
DT_COLUMN_ADD "体位モードデータベース", "対象キャラ", 3
DT_COLUMN_ADD "体位モードデータベース", "同時実行id", 4, 1
DT_COLUMN_ADD "体位モードデータベース", "フリー文字列"
DT_COLUMN_ADD "体位モードデータベース", "フリー変数", 3

@縁結びデータベースセット
DT_CREATE "縁結びデータベース"
DT_COLUMN_ADD "縁結びデータベース", "対象キャラ１", 4
DT_COLUMN_ADD "縁結びデータベース", "対象キャラ２", 4
DT_COLUMN_ADD "縁結びデータベース", "進展度", 3
DT_COLUMN_ADD "縁結びデータベース", "縁結び種別"
DT_COLUMN_ADD "縁結びデータベース", "受け攻め設定"
DT_COLUMN_ADD "縁結びデータベース", "完遂フラグ", 1

@関係性データベースセット
DT_CREATE "関係性データベース"
DT_COLUMN_ADD "関係性データベース", "対象キャラ１", 4
DT_COLUMN_ADD "関係性データベース", "対象キャラ２", 4
DT_COLUMN_ADD "関係性データベース", "関係性種別"
DT_COLUMN_ADD "関係性データベース", "受け攻め設定"


@フレーバー素質初期設定
#DIM 全体設定
#DIM 残りキャラ設定

DRAWLINE
PRINTL 陰毛の濃さや乳輪の大きさなど、快楽発生量に直接関わらない素質を設定します。
PRINTL （口上の変動やコマンド発生条件には関わる可能性があります）
PRINTL 
PRINTL またこれらの設定にこだわりがない場合、［全て表示しない］を選ぶことでキャラのイメージを壊さないことが可能です。
DRAWLINE
PRINTL 
PRINT 現在の設定：
SELECTCASE 全体設定
	CASE 0
		PRINTBUTTON "[全て表示しない]", 100
		PRINTL
	CASE 1
		PRINTBUTTON "[初対面時に設定]", 100
		PRINTL
		PRINT 口上側で設定があるキャラについて：
		IF 残りキャラ設定 == 0
			PRINTBUTTON "[口上側の設定を維持]", 101
		ELSE
			PRINTBUTTON "[初対面時に設定]", 101
		ENDIF
		PRINTL
	CASE 2
		PRINTBUTTON "[初うふふ時に設定]", 100
		PRINTL
		PRINT 口上側で設定があるキャラについて：
		IF 残りキャラ設定 == 0
			PRINTBUTTON "[口上側の設定を維持]", 101
		ELSE
			PRINTBUTTON "[初うふふ時に設定]", 101
		ENDIF
		PRINTL
	CASE 3
		PRINTBUTTON "[ランダムに設定]", 100
		PRINTL
		PRINT 口上側で設定があるキャラについて：
		IF 残りキャラ設定 == 0
			PRINTBUTTON "[口上側の設定を維持]", 101
		ELSE
			PRINTBUTTON "[ランダムに設定]", 101
		ENDIF
		PRINTL
ENDSELECT

PRINTL
PRINTBUTTON "[998] 口上側の設定があるキャラの一覧を見る", 998
PRINTL
PRINTBUTTON "[999] 設定を終える", 999

BINPUT
SELECTCASE RESULT
	CASE 100
		DRAWLINE
		PRINTBUTTON "[全て表示しない]", 0
		PRINTL
		PRINTBUTTON "[初対面時に設定]", 1
		PRINTL
		PRINTBUTTON "[初うふふ時に設定]", 2
		PRINTL
		PRINTBUTTON "[ランダムに設定]", 3
		PRINTL
		DRAWLINE
		PRINTBUTTON "[戻る]", 999
		BINPUT
		IF RESULT == 999
			RESTART
		ENDIF
		残りキャラ設定 = 0
		全体設定 = RESULT
		RESTART
	CASE 101
		DRAWLINE
		SELECTCASE 全体設定
			CASE 1
				PRINTBUTTON "[口上側・引き継ぎキャラの設定を維持]", 0
				PRINTL
				PRINTBUTTON "[初対面時に設定]", 1
				PRINTL
			CASE 2
				PRINTBUTTON "[口上側・引き継ぎキャラの設定を維持]", 0
				PRINTL
				PRINTBUTTON "[初うふふ時に設定]", 1
				PRINTL
			CASE 3
				PRINTBUTTON "[口上側・引き継ぎキャラの設定を維持]", 0
				PRINTL
				PRINTBUTTON "[ランダムに設定]", 1
				PRINTL
		ENDSELECT
		DRAWLINE
		PRINTBUTTON "[戻る]", 999
		BINPUT
		IF RESULT == 999
			RESTART
		ENDIF
		残りキャラ設定 = RESULT
		RESTART
	CASE 998
		CALL フレーバー素質口上設定者表示
		RESTART
ENDSELECT

SELECTCASE 全体設定
	CASE 0
		PRINTL [全て表示しない]の設定でゲームを開始します。
		FOR COUNT, 1, CHARANUM
			フレーバー素質:COUNT:素質表示設定 = 0
		NEXT
		フレーバー素質設定 = 1
	CASE 1
		PRINT [初対面時に設定]、
		IF 残りキャラ設定 == 0
			PRINT 口上存在キャラ・引き継ぎキャラは[設定を維持]
		ELSE
			PRINT 口上存在キャラ・引き継ぎキャラも[初対面時に設定]
		ENDIF
		PRINTL の設定でゲームを開始します。
		FOR COUNT, 1, CHARANUM
			IF 残りキャラ設定 == 0 && フレーバー素質:COUNT:素質表示設定 == 1
				CONTINUE
			ENDIF
			フレーバー素質:COUNT:素質表示設定 = 2
		NEXT
		フレーバー素質設定 = 2
	CASE 2
		PRINT [初うふふ時に設定]、
		IF 残りキャラ設定 == 0
			PRINT 口上存在キャラ・引き継ぎキャラは[設定を維持]
		ELSE
			PRINT 口上存在キャラ・引き継ぎキャラも[初うふふ時に設定]
		ENDIF
		PRINTL の設定でゲームを開始します。
		FOR COUNT, 1, CHARANUM
			IF 残りキャラ設定 == 0 && フレーバー素質:COUNT:素質表示設定 == 1
				CONTINUE
			ENDIF
			フレーバー素質:COUNT:素質表示設定 = 3
		NEXT
		フレーバー素質設定 = 3
	CASE 3
		PRINT [ランダムに設定]、
		IF 残りキャラ設定 == 0
			PRINT 口上存在キャラ・引き継ぎキャラは[設定を維持]
		ELSE
			PRINT 口上存在キャラ・引き継ぎキャラも[ランダムに設定]
		ENDIF
		PRINTL の設定でゲームを開始します。
		FOR COUNT, 1, CHARANUM
			IF 残りキャラ設定 == 0 && フレーバー素質:COUNT:素質表示設定 == 1
				CONTINUE
			ENDIF
			フレーバー素質:COUNT:素質表示設定 = 1
			フレーバー素質:COUNT:陰毛濃さ = RAND:5 + 1
			フレーバー素質:COUNT:乳首大きさ = RAND:5 + 1
			フレーバー素質:COUNT:乳輪大きさ = RAND:5 + 1
			フレーバー素質:COUNT:性器種類 = RAND:5 + 1
			フレーバー素質:COUNT:クリ大きさ = RAND:3 + 1
			LOCAL = RAND:5
			SIF LOCAL == 0
				SETBIT フレーバー素質:COUNT:ほくろ位置, 0
			LOCAL = RAND:5
			SIF LOCAL == 0
				SETBIT フレーバー素質:COUNT:ほくろ位置, 1
			LOCAL = RAND:5
			SIF LOCAL == 0
				SETBIT フレーバー素質:COUNT:ほくろ位置, 2
			LOCAL = RAND:5
			SIF LOCAL == 0 && GETBIT(TALENT:COUNT:性別, 1)
				SETBIT フレーバー素質:COUNT:ほくろ位置, 3
		NEXT
ENDSELECT


@フレーバー素質個別設定画面(キャラ番号)
#DIM キャラ番号
#DIM フレーバー素質数値保存, 10
VARSET フレーバー素質数値保存

$描画_LOOP
DRAWLINE
PRINTL キャラクターのフレーバー素質を手動で設定します。
DRAWLINE
LOCALS = 
;画像があるなら突っ込んでおく
SIF CSTR:キャラ番号:画像フォルダ == ""
	CSTR:キャラ番号:画像フォルダ = {NO:キャラ番号}%CALLNAME:キャラ番号%


LOCALS += @"<div rect='4000,0,1500,3000'>%短冊グラ表示用文字列関数(キャラ番号)%</div>"
LOCALS += "<div rect='62,0,3875,3750' border='31' bcolor='#C0C0C0'></div>"
LOCALS += "<div rect='137,125,3675,3750'>"

LOCALS += @"■%NAME:キャラ番号%<br>"
IF 装備ステータス補正保存:キャラ番号:属性
	LOCALS:1 = %属性数値文字色変換_HTML(装備ステータス補正保存:キャラ番号:属性 - 10)%
	LOCALS += @"<font color='#%LOCALS:1%'>属性：%属性数値文字列変換(装備ステータス補正保存:キャラ番号:属性 - 10)%</font>"
ELSE
	LOCALS:1 = %属性数値文字色変換_HTML(基礎BATTLE_STATE:キャラ番号:属性)%
	LOCALS += @"<font color='#%LOCALS:1%'>属性：%属性数値文字列変換(基礎BATTLE_STATE:キャラ番号:属性)%</font>"
ENDIF
LOCALS += @"　得意武器：%得意武器数値文字列変換(基礎BATTLE_STATE:キャラ番号:得意武器)%　"
LOCALS += @"　タイプ：%タイプ数値文字列変換(基礎BATTLE_STATE:キャラ番号:ステータスタイプ保存)%"
LOCALS += "<br><br>"
LOCALS += "□ 情報 □---------------------------------------------------------------<br>"
LOCALS += @"　種族：%GET_TALENTNAME(200,TALENT:キャラ番号:種族)%"
IF CSTR:キャラ番号:特殊種族 != ""
	LOCALS +=  @"[%CSTR:キャラ番号:特殊種族%]"
ENDIF
SIF TALENT:キャラ番号:角あり
	LOCALS += " （角あり）"
SIF TALENT:キャラ番号:尻尾あり
	LOCALS += " （尻尾）"
SIF TALENT:キャラ番号:エルーン耳
	LOCALS += " （エルーン耳）"
SIF TALENT:キャラ番号:ハーヴィン耳
	LOCALS += " （ハーヴィン耳）"
SIF TALENT:キャラ番号:発情期あり > 0
	LOCALS += " （発情期あり）"
SIF TALENT:キャラ番号:発情期あり < 0
	LOCALS += " （発情期なし）"
LOCALS += "<br>"
LOCALS += "　性別："
IF TALENT:キャラ番号:性別 == 1
	LOCALS += "女性"
	SIF TALENT:キャラ番号:処女
		LOCALS += "（処女）"
ELSEIF TALENT:キャラ番号:性別 == 2
	LOCALS += "男性"
	SIF TALENT:キャラ番号:非童貞 == 0
		LOCALS += "（童貞）"
ELSEIF TALENT:キャラ番号:性別 == 3
	LOCALS += "ふたなり"
	SIF TALENT:キャラ番号:非童貞 == 0
		LOCALS += "(童貞)"
	SIF TALENT:キャラ番号:処女
		LOCALS += "（処女）"
ELSE 
	LOCALS += "その他"
ENDIF
IF GETBIT(TALENT:キャラ番号:性別, 0)
LOCALS += @"バストサイズ：%GET_TALENTNAME(205,TALENT:キャラ番号:バストサイズ)%"
ENDIF
LOCALS += "<br>"

LOCALS += @"　性知識レベル：%性知識段階表示(知識素質:キャラ番号:性知識, キャラ番号), 17, LEFT%"
LOCALS += "<br>"

IF TALENT:キャラ番号:性別 & 2
	LOCALS += @"　男性器サイズ：%GET_TALENTNAME(162,TALENT:キャラ番号:男性器サイズ)%"
	LOCALS += "<br>"
ENDIF
LOCALS += "<br>"
LOCALS += "□ 素質 □---------------------------------------------------------------<br>"
LOCALS:1 = 
FOR COUNT,8,160
	IF STRLENS(GET_TALENTNAME(COUNT,TALENT:キャラ番号:COUNT, 0))
		LOCALS += @"[%GET_TALENTNAME(COUNT,TALENT:キャラ番号:COUNT, 0)%]"
	ENDIF
NEXT
FOR COUNT,220,300
	IF STRLENS(GET_TALENTNAME(COUNT,TALENT:キャラ番号:COUNT, 0))
		LOCALS += @"[%GET_TALENTNAME(COUNT,TALENT:キャラ番号:COUNT, 0)%]"
	ENDIF
NEXT
FOR COUNT,1,100
	IF 知識素質:キャラ番号:COUNT
		LOCALS += @"[%ERDNAME(知識素質,COUNT)%Lv{知識素質:キャラ番号:COUNT}]"
	ENDIF
NEXT
LOCALS += "<br>"
LOCALS += "<br>"
LOCALS += "□ フレーバー素質 □-----------------------------------------------------<br>"

FOR COUNT, 1, 6
	SIF ERDNAME(フレーバー素質, COUNT) == ""
		CONTINUE
	SIF GETBIT(TALENT:キャラ番号:性別, 0) == 0 && COUNT >= 1
		BREAK
	LOCALS += @"　%ERDNAME(フレーバー素質, COUNT), 12, LEFT%："
	FOR LOCAL:1, 0, 6
		LOCALS:2 = %GET_フレーバー素質NAME(COUNT,LOCAL:1)%
		IF LOCAL:1 == 0
			LOCALS:2 = 非表示
		ENDIF
		IF COUNT == 5 && LOCAL:1 == 4
			CONTINUE
		ELSEIF LOCALS:2 == ""
			CONTINUE
		ENDIF
		IF フレーバー素質数値保存:COUNT == LOCAL:1
			LOCALS:1 = C0C0C0
		ELSE
			LOCALS:1 = 333333
		ENDIF
		LOCALS += @"<font color='#%LOCALS:1%'><button value='{COUNT * 10 + LOCAL:1}'>[%LOCALS:2%]</button></font>"
	NEXT
	LOCALS += "<br>"
NEXT
LOCALS += @"　%ERDNAME(フレーバー素質, 6), 12, LEFT%：　　　　"
FOR LOCAL:1, 0, 4
	LOCALS:2 = %GET_フレーバー素質NAME(6, POWER(2, LOCAL:1))%
	IF LOCALS:2 == ""
		CONTINUE
	ELSEIF LOCAL:1 == 3 && GETBIT(TALENT:キャラ番号:性別, 1) == 0
		CONTINUE
	ENDIF
	IF GETBIT(フレーバー素質数値保存:6,LOCAL:1)
		LOCALS:1 = C0C0C0
	ELSE
		LOCALS:1 = 333333
	ENDIF
	LOCALS += @"<font color='#%LOCALS:1%'><button value='{60 + LOCAL:1}'>[%LOCALS:2%]</button></font>"
NEXT
LOCALS += "</div>"
LOCALS += "<div rect='2812,3562,1875,312'><button value='999'>[999] これで決定</button></div>"

HTML_PRINT LOCALS, 1
FOR COUNT, 0, 35
	PRINTL
NEXT

BINPUT
LOCAL = RESULT
SELECTCASE LOCAL
	CASE 0 TO 59
		フレーバー素質数値保存:(LOCAL / 10) = LOCAL % 10
		GOTO 描画_LOOP
	CASE 60 TO 69
		INVERTBIT フレーバー素質数値保存:(LOCAL / 10), LOCAL % 10
		GOTO 描画_LOOP
	CASE 999
		LOCAL:1 = 0
		FOR COUNT, 1, 10
			IF フレーバー素質数値保存:COUNT
				フレーバー素質:キャラ番号:COUNT = フレーバー素質数値保存:COUNT
				LOCAL:1 = 1
			ENDIF
		NEXT
		IF LOCAL:1
			フレーバー素質:キャラ番号:0 = 1
		ELSE
			フレーバー素質:キャラ番号:0 = 0
		ENDIF
ENDSELECT



@フレーバー素質口上設定者表示
#DIM 現在ページ
#DIM 表示候補, 500
#DIM 候補人数
現在ページ = 0

$最初から
;表示候補選定＆ソート処理
LOCAL:1 = 0
VARSET 表示候補
VARSET LOCALS
;フィルタ処理・絞り込み処理
FOR LOCAL, 1, CHARANUM
	SIF フレーバー素質:LOCAL:素質表示設定 != 1
		CONTINUE
	表示候補:(LOCAL:1) = LOCAL
	LOCAL:1 += 1
NEXT
候補人数 = LOCAL:1
LOCAL:1 = 1

$表示処理_LOOP
DRAWLINE
VARSET LOCAL
VARSET LOCALS
;表示処理
FOR LOCAL, 現在ページ * 30, 候補人数
	LOCALS += @"<button value = '{表示候補:LOCAL}'>[{表示候補:LOCAL,3}] %ADD_STR_SPACE(NAME:(表示候補:LOCAL), "]"),41,LEFT%</button>"
	LOCALS += "　　　　　　　　"
	LOCAL:1 += 1
	IF LOCAL:1 % 2 == 0
		HTML_PRINT LOCALS
		LOCALS = 
	ENDIF
	SIF LOCAL:1 > 29
		BREAK
NEXT
IF LOCALS != ""
	HTML_PRINT LOCALS
	LOCALS = 
ENDIF
PRINTL 
IF 現在ページ > 0
	PRINTLC  [900]前のページへ
ELSE
	PRINTLC  
ENDIF
IF 現在ページ < 候補人数 / 30
	PRINTLC  [901]次のページへ
ENDIF
PRINTL
DRAWLINE
PRINTBUTTONLC "[1000]戻る", 1000
PRINTL

$INPUT_LOOP
BINPUT
IF RESULT == 1000
	RETURN 0
ELSEIF RESULT == 900
	現在ページ = MAX(現在ページ - 1, 0)
	GOTO 表示処理_LOOP
ELSEIF RESULT == 901
	現在ページ = MIN(現在ページ + 1, 候補人数 / 30)
	GOTO 表示処理_LOOP
ENDIF
LOCAL = RESULT
$再表示
IF 候補人数 == 1
	CALL PRINT_STATE(LOCAL, 0)
ELSEIF 表示候補:0 == LOCAL
	CALL PRINT_STATE(LOCAL, 2)
ELSEIF 表示候補:(候補人数 - 1) == LOCAL
	CALL PRINT_STATE(LOCAL, 1)
ELSE
	CALL PRINT_STATE(LOCAL, 3)
ENDIF
IF RESULT == 100
	FOR LOCAL:1, 0, 候補人数
		IF 表示候補:(LOCAL:1) == LOCAL
			LOCAL = 表示候補:(LOCAL:1 - 1)
			BREAK
		ENDIF 
	NEXT
	GOTO 再表示
ELSEIF RESULT == 101
	FOR LOCAL:1, 0, 候補人数
		IF 表示候補:(LOCAL:1) == LOCAL
			LOCAL = 表示候補:(LOCAL:1 + 1)
			BREAK
		ENDIF 
	NEXT
	GOTO 再表示
ENDIF

GOTO 最初から
